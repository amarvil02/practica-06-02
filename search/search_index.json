{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"About","text":"<p>Este es el contenido del fichero about.md</p>"},{"location":"practica-01-03/","title":"Despliegue de una aplicaci\u00f3n web LAMP sencilla","text":"<p>En esta pr\u00e1ctica tenemos archivos importados de la pr\u00e1ctica 1, en el directorio conf est\u00e1 el archivo 000-default.conf, tambi\u00e9n tenemos en el directorio php el archivo index.php y en el directorio scripts tendremos el .env (variables distintas a la primera pr\u00e1ctica) y el script install_lamp.sh, estos archivos provienen de la primera pr\u00e1ctica. En esta pr\u00e1ctica tenemos un script nuevo llamado deploy.sh, que es el script de Bash con la automatizaci\u00f3n del proceso de instalaci\u00f3n de la aplicaci\u00f3n web LAMP.</p>"},{"location":"practica-01-03/#creacion-install_lampsh","title":"Creaci\u00f3n install_lamp.sh","text":"<p>Empezaremos el script con \"#!/bin/bash\", que es un indicador que le dice al sistema operativo que el script debe ser ejecutado utilizando el int\u00e9rprete de Bash.</p> <p>Tras esto, veremos tambi\u00e9n \"set -x\" que mostrar\u00e1 todos los comandos que se vayan ejecutando.</p> <p>Lo siguiente que vemos es el comando \"apt update\", el cu\u00e1l actualizar\u00e1 los repositorios. Tambi\u00e9n, tendremos el comando \"apt upgrade -y\" que actualizar\u00e1 los paquetes que hemos instalado en el anterior comando a sus \u00faltimas versiones.</p>"},{"location":"practica-01-03/#instalacion-del-servidor-web-apache","title":"Instalaci\u00f3n del servidor web Apache","text":"<p>A continuaci\u00f3n, vamos a instalar el servidor web Apache, con el comando \"apt install apache2 -y\". Aunque no est\u00e9 reflejado en el script, necesitamos unos comandos para iniciar Apache. Con el comando \"sudo systemctl start apache2\" y con el comando \"sudo systemctl enable apache2\" dejar\u00e1 activado el servidor y no se apagar\u00e1 cada vez que apaguemos la m\u00e1quina.</p>"},{"location":"practica-01-03/#instalacion-de-mysql","title":"Instalaci\u00f3n de MySQL","text":"<p>El siguiente paso en el script ser\u00e1 instalar el sistema gestor de base de datos de MySQL con el comando \"apt install mysql-server -y\", al igual que con el servidor Apache tendremos que iniciar el servidor con el comando \"sudo systemctl start mysql\" y lo dejamos habilitado con \"sudo systemctl enable mysql\". Con MySQL instalado podremos acceder a los archivos de configuraci\u00f3n en /etc/mysql/mysql.cnf, a los archivos de log en /var/log/mysql/error.log y podremos acceder a MySQL con \"sudo mysql\".</p>"},{"location":"practica-01-03/#instalacion-de-php","title":"Instalaci\u00f3n de PHP","text":"<p>Lo siguiente que tenemos ser\u00e1 PHP con sus m\u00f3dulos con el comando \"apt install php libapache2-mod-php php-mysql -y\". Una vez instalado PHP, tendremos en el directorio php que tenemos de la primera pr\u00e1ctica un archivo index.php en el cu\u00e1l tendremos una estructura php con el contenido phpinfo(); que nos permitir\u00e1 comprobar que la instalaci\u00f3n de PHP se ha completado con \u00e9xito, si accedes a tu direcci\u00f3n IP/info.php ver\u00e1s la p\u00e1gina con PHP.</p> <p>En el directorio conf que hemos importado, veremos un archivo llamado 000-default.conf para la configuraci\u00f3n de Apache. En nuestro script, copiaremos ese archivo con el comando \"cp ../conf/000-default.conf /etc/apache2/sites-available\".</p> <p>Tras esto, reiniciamos Apache con \"systemctl restart apache2\".</p> <p>Antes hemos visto que hemos importado el archivo index.php pero no esta implementado en nuestro script y por lo tanto, no se aplicar\u00e1. Para que funcione copiaremos este archivo en el script con el comando cp -&gt; \"cp ../php/index.php /var/www/html\".</p> <p>Por \u00faltimo, modificamos el propietario y el grupo de los directorios de forma recursiva del directorio /var/www/html a trav\u00e9s de \"chown -R www-data:www-data /var/www/html\".</p> <p>Lo ejecutamos con sudo ./install_lamp, no necesitamos darle permisos porque ya los tendr\u00e1 de la anterior pr\u00e1ctica.</p>"},{"location":"practica-01-03/#creacion-deploysh","title":"Creaci\u00f3n deploy.sh","text":"<p>Este script, como ya he dicho, nos va a permitir la automatizaci\u00f3n del proceso de instalaci\u00f3n de la aplicaci\u00f3n web LAMP. Lo primero que tenemos en este script, son las diez primeras linea del install_lamp.sh que tendr\u00e1n la misma funci\u00f3n que en script de LAMP.</p> <p>Pero antes de actualizar, tenemos el comando \"source.env\", este comando incluye las variables que tenemos en el archivo .env que nos servir\u00e1n para configurar las variables que nos servir\u00e1n en comandos posteriores, el contenido de este archivo no es el mismo que en la primera pr\u00e1ctica, ser\u00e1:</p> <p>DB_NAME=aplicacion  DB_USER=lamp_user  DB_PASSWORD=lamp_password</p>"},{"location":"practica-01-03/#aplicacion-web-lamp","title":"Aplicaci\u00f3n web LAMP","text":"<p>Lo siguiente que tenemos, es un comando para eliminar las descargas previas de nuestro repositorio /tmp/iaw-practica-lamp (un directorio temporal) para que cada vez que ejecutemos el script se pueda descargar la aplicaci\u00f3n de nuevo y no de problemas, utilizamos \"rm -rf /tmp/iaw-practica-lamp\".</p> <p>Una vez que hemos configurado esto, vamos a clonar un repositorio que contiene el c\u00f3digo fuente de la aplicaci\u00f3n -&gt; \"git clone https://github.com/josejuansanchez/iaw-practica-lamp.git /tmp/iaw-practica-lamp\" que tiene una base de datos y un directorio source (c\u00f3digo fuente) que contiene entre otros, el archivo config.php que configuraremos ahora y que contiene las variables.</p> <p>Tras clonar el repositorio, vamos a mover su c\u00f3digo fuente al directorio /var/www/html con el comando mv,\"mv /tmp/iaw-practica-lamp/src/* /var/www/html\". </p> <p>Ya que tenemos esto copiado, como he mencionado, dentro de aqu\u00ed est\u00e1 el archivo config.php, el siguiente paso va a ser configurar este archivo:</p> <p>sed -i \"s/database_name_here/$DB_NAME/\" /var/www/html/config.php  sed -i \"s/username_here/$DB_USER/\" /var/www/html/config.php  sed -i \"s/password_here/$DB_PASSWORD/\" /var/www/html/config.php</p> <p>Lo que acabamos de hacer es reemplazar la variables que ten\u00eda la aplicaci\u00f3n y hemos puesto las nuestras que tenemos en el archivo .env.</p> <p>Aunque hayamos configurado las variables para el nombre, el usuario y la contrase\u00f1a de la base de datos, la base de datos no puede tener cualquier nombre que le pongamos ya que se llama lamp_db para poder cambiarselo utilizamos de nuevo el comando sed:</p> <p>sed -i \"s/lamp_db/$DB_NAME/\" /tmp/iaw-practica-lamp/db/database.sql</p> <p>Una vez realizada toda la configuraci\u00f3n, vamos a importar el script de la base de datos con el comando \"mysql -u root &lt; /tmp/iaw-practica-lamp/db/database.sql\". Tambi\u00e9n, vamos a crear el usuario de la base de datos asignandole privilegios:</p> <p>mysql -u root &lt;&lt;&lt; \"DROP USER IF EXISTS $DB_USER@'%'\"  mysql -u root &lt;&lt;&lt; \"CREATE USER $DB_USER@'%' IDENTIFIED BY '$DB_PASSWORD'\"  mysql -u root &lt;&lt;&lt; \"GRANT ALL PRIVILEGES ON $DB_NAME.* TO $DB_USER@'%'\"</p> <p>Este comando lo que hace es, primero eliminar usuario si existe el usuario que tenemos en nuestra variable. Tambi\u00e9n, crea usuario identificado por la contrase\u00f1a asignada en la variable y da todos los privilegios al usuario sobre la base de datos.</p> <p>Para terminar, como siempre, modificamos el grupo y el propietario de /var/www/html con \"chown -R www-data:www-data /var/www/html\".</p>"}]}